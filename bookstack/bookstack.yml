apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: wbs-bookstack-https-ingressroute
  labels:
    app: bookstack
    environment: dev
    resourceType: ingressroute
  namespace: bookstack
spec:
  entrypoint:
    - websecure
  routes:
  - kind: Rule
    match: Host(`wiki.test.com`) && PathPrefix(`/`)
    services:
    - kind: Service
      name: wbs-bookstack-service
      port: 80
      scheme: https
  tls:
    secretName: traefik-cert
    option:
    - namespace: bookstack
    domain:
    - main: test.com
---
apiVersion: v1
kind: Service
metadata:
  name: wbs-bookstack-service
  labels:
    app: bookstack
    environment: dev
    resourceType: service
  namespace: bookstack
spec:
  selector:
    app: bookstack
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: wbs-bookstack-deployment
  labels:
    app: bookstack
    environment: dev
    resourceType: deployment
  namespace: bookstack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bookstack
  template:
    metadata:
      labels:
        app: bookstack
        environment: dev
        resourceType: pod
      namespace: bookstack
    spec: 
      nodeSelector:
        k8s.scaleway.com/pool-name: default
      restartPolicy: Always
      volumes:
      - name: public-uploads
        persistentVolumeClaim:
          claimName: wbs-bookstack-public-uploads-pvc
      - name: storage-uploads
        persistentVolumeClaim:
          claimName: wbs-bookstack-storage-uploads-pvc
      - name: config
        configMap:
          name: wbs-bookstack-config-configmap
          items:
          - key: .env
            path: .env
      containers:
      - image: solidnerd/bookstack:0.30.4
        name: bookstack
        #command: [/bin/sh, -c, "tail -f /var/log"]
        ports:
        - name: web
          containerPort: 8080
          protocol: TCP
        volumeMounts:
        - name: public-uploads
          mountPath: "/var/www/bookstack/public/uploads"
        - name: storage-uploads
          mountPath: "/var/www/bookstack/storage/uploads"
        - name: config
          mountPath: /var/www/bookstack/.env
          subPath: .env
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: wbs-bookstack-db-env-configmap
              key: DB_HOST
        - name: DB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: wbs-bookstack-db-env-configmap
              key: DB_DATABASE
        - name: DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: wbs-bookstack-db-env-configmap
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: wbs-bookstack-db-env-configmap
              key: DB_PASSWORD
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wbs-bookstack-public-uploads-pvc
  labels:
    app: bookstack
    environment: dev
    resourceType: persistentVolumeClaim
  namespace: bookstack
spec:
  storageClassName: scw-bssd
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wbs-bookstack-storage-uploads-pvc
  labels:
    app: bookstack
    environment: dev
    resourceType: persistentVolumeClaim
  namespace: bookstack
spec:
  storageClassName: scw-bssd
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
